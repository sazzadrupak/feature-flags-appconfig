import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { AppConfigDataServiceException as __BaseException } from "./AppConfigDataServiceException";
export const InvalidParameterProblem = {
    CORRUPTED: "Corrupted",
    EXPIRED: "Expired",
    POLL_INTERVAL_NOT_SATISFIED: "PollIntervalNotSatisfied",
};
export var BadRequestDetails;
(function (BadRequestDetails) {
    BadRequestDetails.visit = (value, visitor) => {
        if (value.InvalidParameters !== undefined)
            return visitor.InvalidParameters(value.InvalidParameters);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(BadRequestDetails || (BadRequestDetails = {}));
export const BadRequestReason = {
    INVALID_PARAMETERS: "InvalidParameters",
};
export class BadRequestException extends __BaseException {
    name = "BadRequestException";
    $fault = "client";
    Message;
    Reason;
    Details;
    constructor(opts) {
        super({
            name: "BadRequestException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, BadRequestException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
        this.Details = opts.Details;
    }
}
export class InternalServerException extends __BaseException {
    name = "InternalServerException";
    $fault = "server";
    Message;
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.Message = opts.Message;
    }
}
export const ResourceType = {
    APPLICATION: "Application",
    CONFIGURATION: "Configuration",
    CONFIGURATION_PROFILE: "ConfigurationProfile",
    DEPLOYMENT: "Deployment",
    ENVIRONMENT: "Environment",
};
export class ResourceNotFoundException extends __BaseException {
    name = "ResourceNotFoundException";
    $fault = "client";
    Message;
    ResourceType;
    ReferencedBy;
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
        this.ResourceType = opts.ResourceType;
        this.ReferencedBy = opts.ReferencedBy;
    }
}
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export const GetLatestConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Configuration && { Configuration: SENSITIVE_STRING }),
});
