import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { AppConfigDataClient } from "./AppConfigDataClient";
import {
  GetLatestConfigurationCommandInput,
  GetLatestConfigurationCommandOutput,
} from "./commands/GetLatestConfigurationCommand";
import {
  StartConfigurationSessionCommandInput,
  StartConfigurationSessionCommandOutput,
} from "./commands/StartConfigurationSessionCommand";
export interface AppConfigData {
  getLatestConfiguration(
    args: GetLatestConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLatestConfigurationCommandOutput>;
  getLatestConfiguration(
    args: GetLatestConfigurationCommandInput,
    cb: (err: any, data?: GetLatestConfigurationCommandOutput) => void
  ): void;
  getLatestConfiguration(
    args: GetLatestConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLatestConfigurationCommandOutput) => void
  ): void;
  startConfigurationSession(
    args: StartConfigurationSessionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartConfigurationSessionCommandOutput>;
  startConfigurationSession(
    args: StartConfigurationSessionCommandInput,
    cb: (err: any, data?: StartConfigurationSessionCommandOutput) => void
  ): void;
  startConfigurationSession(
    args: StartConfigurationSessionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartConfigurationSessionCommandOutput) => void
  ): void;
}
export declare class AppConfigData
  extends AppConfigDataClient
  implements AppConfigData {}
